{"ast":null,"code":"var _jsxFileName = \"/Users/marco/React/catdex/src/components/CatForm.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { addCat } from '../action';\nimport { TextField, Button, Fab } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\n\nclass CatForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      breed: '',\n      desc: '',\n      error: {\n        name: 'Name must not be empty',\n        breed: 'Breed must not be empty',\n        desc: 'Description must not be empty'\n      },\n      add: false\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.validateForm = this.validateForm.bind(this);\n  }\n\n  toggleAdd() {\n    this.setState;\n  }\n\n  validateForm(err) {\n    let valid = true;\n    Object.values(err).forEach(val => val.length > 0 && (valid = false));\n    return valid;\n  }\n\n  onChange(e) {\n    e.preventDefault();\n    const _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n    let error = this.state.error;\n\n    switch (name) {\n      case 'name':\n        error.name = value.length < 1 ? 'Name must not be empty' : '';\n        break;\n\n      case 'breed':\n        error.breed = value.length < 1 ? 'Breed must not be empty' : '';\n        break;\n\n      case 'desc':\n        error.desc = value.length < 1 ? 'Description must not be empty' : '';\n        break;\n\n      default:\n        break;\n    }\n\n    this.setState({\n      error,\n      [name]: value\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    if (this.validateForm(this.state.error)) {\n      const cat = {\n        name: this.state.name,\n        breed: this.state.breed,\n        desc: this.state.desc\n      };\n      this.props.addCat(cat);\n      this.setState = {\n        toggleAdd: false\n      };\n    }\n  }\n\n  render() {\n    const view = this.state.add ? React.createElement(\"div\", {\n      className: \"card-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"name\",\n      label: \"Cat Name\",\n      name: \"name\",\n      error: this.state.error.name,\n      required: \"true\",\n      value: this.state.name,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"breed\",\n      label: \"Cat Breed\",\n      name: \"breed\",\n      error: this.state.error.breed,\n      required: \"true\",\n      value: this.state.breed,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"desc\",\n      label: \"Description\",\n      name: \"desc\",\n      error: this.state.error.desc,\n      required: \"true\",\n      value: this.state.desc,\n      onChange: this.onChange,\n      style: {\n        width: 210\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      type: \"submit\",\n      id: \"add-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Add\"))) : React.createElement(\"div\", {\n      className: \"card-content-add\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      type: \"button\",\n      id: \"add-toggle-button\",\n      onClick: \"toggleAdd()\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(AddIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    })));\n    return React.createElement(\"div\", {\n      className: \"cat-card-add\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, view);\n  }\n\n}\n\nexport default connect(null, {\n  addCat\n})(CatForm);","map":{"version":3,"sources":["/Users/marco/React/catdex/src/components/CatForm.js"],"names":["React","Component","connect","addCat","TextField","Button","Fab","AddIcon","CatForm","constructor","props","state","name","breed","desc","error","add","onChange","bind","onSubmit","validateForm","toggleAdd","setState","err","valid","Object","values","forEach","val","length","e","preventDefault","target","value","cat","render","view","width"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { addCat } from '../action';\nimport { TextField, Button, Fab } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\n\nclass CatForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      breed: '',\n      desc: '',\n      error: {\n        name: 'Name must not be empty',\n        breed: 'Breed must not be empty',\n        desc: 'Description must not be empty',\n      },\n      add: false,\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.validateForm = this.validateForm.bind(this);\n  }\n\n  toggleAdd() {\n    this.setState\n  }\n\n  validateForm(err) {\n    let valid = true;\n    Object.values(err).forEach((val) => \n      val.length > 0 && (valid = false)\n    );\n    return valid;\n  }\n\n  onChange(e) {\n    e.preventDefault();\n    const {name,value} = e.target;\n    let error = this.state.error;\n    switch (name) {\n      case 'name':\n        error.name = value.length < 1 ?\n        'Name must not be empty' : \n        ''\n        break;\n      case 'breed':\n        error.breed = value.length < 1 ?\n        'Breed must not be empty' :\n        ''\n        break;\n      case 'desc':\n        error.desc = value.length < 1 ?\n        'Description must not be empty' :\n        ''\n        break;\n      default:\n        break;\n    }\n    this.setState({error, [name]:value});\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    if(this.validateForm(this.state.error)) {\n      const cat = {\n        name: this.state.name,\n        breed: this.state.breed,\n        desc: this.state.desc\n      }\n      this.props.addCat(cat);\n      this.setState = {\n        toggleAdd: false\n      }\n    }\n  }\n\n  render() {\n    const view = this.state.add ? \n      <div className=\"card-content\">\n        <form onSubmit={this.onSubmit}>\n          <TextField \n            id=\"name\"\n            label=\"Cat Name\"\n            name=\"name\"\n            error={this.state.error.name}\n            required=\"true\"\n            value={this.state.name}\n            onChange={this.onChange} \n          />\n          <TextField \n            id=\"breed\"\n            label=\"Cat Breed\"\n            name=\"breed\"\n            error={this.state.error.breed}\n            required=\"true\"\n            value={this.state.breed}\n            onChange={this.onChange} \n          />\n          <br />\n          <TextField \n            id=\"desc\"\n            label=\"Description\"\n            name=\"desc\"\n            error={this.state.error.desc}\n            required=\"true\"\n            value={this.state.desc}\n            onChange={this.onChange} \n            style={{width: 210}}\n          />\n          <Button variant=\"contained\" color=\"primary\" type=\"submit\" id=\"add-button\">Add</Button>\n        </form>\n      </div> :\n      <div className=\"card-content-add\">\n        <Button variant=\"contained\" color=\"primary\" type=\"button\" id=\"add-toggle-button\" onClick=\"toggleAdd()\"><AddIcon /></Button>\n      </div>\n    return(\n      <div className=\"cat-card-add\">\n        {view}\n      </div>\n    );\n  }\n}\n\nexport default connect(null,{ addCat })(CatForm);"]},"metadata":{},"sourceType":"module"}